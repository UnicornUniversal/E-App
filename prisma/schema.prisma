// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  firstName      String
  lastName       String
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  description    String?
  role           String       
  features       String[]
  skills         String[]      
  occupation     String
  education      String
  website        String
  certifications String[]
  contact        String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  task Task[]
  Invoice Invoice[]
}

model Task {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// Define the Invoice model
model Invoice {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  invoiceNumber String        @unique
  issueDate     DateTime
  dueDate       DateTime
  totalAmount   Float
  status        String // Paid, Unpaid, Overdue, etc.
  items         InvoiceItem[]
  from          String
  to            String
  discount      Float

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @db.ObjectId
}

// Define the InvoiceItem model
model InvoiceItem {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  description String
  quantity    Int
  service     String
  unitPrice   Float
  price       Float
  tax         Float
  totalAmount Float

  invoice   Invoice @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  invoiceId String  @db.ObjectId
}
